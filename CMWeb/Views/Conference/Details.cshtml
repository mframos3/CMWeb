@model CMWeb.Models.Conference
@{
    ViewData["Title"] = "Details";
    //var eEvents = ViewData["Events"] as List<Event>;
}
<style>
    .dropbtn {
      background-color: #3498DB;
      color: white;
      padding: 16px;
      font-size: 16px;
      border: none;
      cursor: pointer;
    }
    
    .dropbtn:hover, .dropbtn:focus {
      background-color: #2980B9;
    }
    
    .dropdown {
      position: relative;
      display: inline-block;
    }
    
    .dropdown-content {
      display: none;
      position: absolute;
      background-color: #f1f1f1;
      min-width: 160px;
      overflow: auto;
      box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
      z-index: 1;
    }
    
    .dropdown-content a {
      color: black;
      padding: 12px 16px;
      text-decoration: none;
      display: block;
    }
    
    .dropdown a:hover {background-color: #ddd;}
    
    .show {display: block;}
    
    .rate-select {
      display: inline-flex;
    }
 
    
</style>
<h1>Details</h1>
<div>
    <h4>Conference</h4>
    <h3>@Model.SuperConference.Name</h3>
    <button onclick="myFunction()" class="dropbtn">Create Event</button>
    <div id="myDropdown" class="dropdown-content">
        <a asp-controller="Chat" asp-action="Create" asp-route-conferenceId="@Model.Id">Chat</a>
        <a asp-controller="Meal" asp-action="Create" asp-route-conferenceId="@Model.Id">Meal</a>
        <a asp-controller="Party" asp-action="Create" asp-route-conferenceId="@Model.Id">Party</a>
        <a asp-controller="Talk" asp-action="Create" asp-route-conferenceId="@Model.Id">Talk</a>
        <a asp-controller="Workshop" asp-action="Create" asp-route-conferenceId="@Model.Id">Workshop</a>
    </div>
   
    <br>
    <a asp-controller="Notification" asp-action="Create">Send Notification</a>
    <br>
    
    
    <form asp-controller="ConferenceRating" asp-action="Create" method="post">  
        <fieldset>
        <legend>How about the conference?</legend>
            <div class="rate-select">
                <table>
                    <tr>
                        <th>1</th>
                        <th>2</th>
                        <th>3</th>
                        <th>4</th>
                        <th>5</th>
                    </tr>
                    <tr>
                        <td><input type="checkbox" name="Rating" value="1" onclick="return ValidateRating();"></td>
                        <td><input type="checkbox" name="Rating" value="2" onclick="return ValidateRating();"></td>
                        <td><input type="checkbox" name="Rating" value="3" onclick="return ValidateRating();"></td>
                        <td><input type="checkbox" name="Rating" value="4" onclick="return ValidateRating();"></td>
                        <td><input type="checkbox" name="Rating" value="5" onclick="return ValidateRating();"></td>
                    </tr>
                </table>
            </div>
            <div>
                Comment:<br>
                <input type="text" name="Comment"><br>
                <input value="@Model.Id" type="hidden" name="ConferenceId"/>
                <input value="@ViewData["CurrentUserId"]" name="UserId" type="hidden"/>
                <br>
            </div>
            <input type="submit" value="Enviar">  
        </fieldset>  
    </form>  
    <a asp-controller="ConferenceRating" asp-action="Index" asp-route-conferenceId="@Model.Id">Show all comments</a>

 
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Edition)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Edition)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.StartDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.StartDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.EndDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.EndDate)
        </dd>

    </dl>

</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
<br>
<h3> Events</h3>
<table class="table">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Start Date
            </th>
            <th>
                End Date
            </th>
            <th>
                Track
            </th>
            <th>
                Type
            </th>
            <th>
                Location
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Events) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndDate)
            </td>
            <td>
                @foreach (var track in @item.Track.Split(";"))
                {
                    <a asp-action="Track" asp-controller="Event" asp-route-track="@track">@track</a>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.GetType().Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EventCenterRoom.Location)
            </td>
            <td>
                <a asp-action="Details" asp-controller="@item.GetType().Name" asp-route-id="@item.Id">Details</a>
            </td>
        </tr>
}
    </tbody>
</table>

<script>
/* When the user clicks on the button, 
toggle between hiding and showing the dropdown content */
function myFunction() {
  document.getElementById("myDropdown").classList.toggle("show");
}

// Close the dropdown if the user clicks outside of it
window.onclick = function(event) {
  if (!event.target.matches('.dropbtn')) {
    var dropdowns = document.getElementsByClassName("dropdown-content");
    var i;
    for (i = 0; i < dropdowns.length; i++) {
      var openDropdown = dropdowns[i];
      if (openDropdown.classList.contains('show')) {
        openDropdown.classList.remove('show');
      }
    }
  }
};
    function ValidateRating()  
    {  
        var checkboxes = document.getElementsByName("Rating");  
        var numberOfCheckedItems = 0;  
        for(var i = 0; i < checkboxes.length; i++)  
        {  
            if(checkboxes[i].checked)  
                numberOfCheckedItems++;  
        }  
        if(numberOfCheckedItems > 1)  
        {  
            alert("You can't select more than one rate!");  
            return false;  
        }  
    }  
    </script>
